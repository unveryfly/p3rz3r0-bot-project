import discord
from discord.ext import commands
import asyncio
import json
import os
import discord.utils
import random


class OldLevel(commands.Cog):
    red=100
    pink=160
    yellow=75
    orange=90
    green=50
    blue=150

    os.chdir(r'../Discord Bot/cogs/database')

    def __init__(self, client):
        self.client = client

    @commands.command()
    async def shop(self, ctx):
        await ctx.send(f"```Welcome to Chill zone's shop \n Roles: \n Red role: 100 coins \n Pink role: 160 coins \n Yellow role: 75 coins \n Orange role: 90 coins \n Green role: 50 coins \n Blue role: 150 coins \n Voicechanger Role: 6000 coins - Allows you to use Voice Changer!```")

    @commands.command()
    async def flipcoin(self, ctx, coins):
        with open('users.json', 'r') as f:
            users = json.load(f)

        await self.fc(ctx, users, ctx.author, coins)

        with open('users.json', 'w') as f:
            json.dump(users, f)

    @commands.command
    async def wins(self, ctx, member: discord.Member):
        with open('users.json', 'r') as f:
            users = json.load(f)

        await self.saywins(ctx, users, member)

        with open('users.json', 'w') as f:
            json.dump(users, f)
    
    @commands.command
    async def losses(self, ctx, member: discord.Member):
        with open('users.json', 'r') as f:
            users = json.load(f)

        await self.sayloss(ctx, users, member)

        with open('users.json', 'w') as f:
            json.dump(users, f)

    @commands.command
    async def winstreak(self, ctx, member: discord.Member):
        with open('users.json', 'r') as f:
            users = json.load(f)

        await self.saywinstreak(ctx, users, member)

        with open('users.json', 'w') as f:
            json.dump(users, f)

    @commands.command()
    async def buy(self, ctx, *, item):
       with open('users.json', 'r') as f:
            users = json.load(f)

       with open('role.json', 'r') as f:
            users2 = json.load(f)

       await self.buyitem(ctx, users, users2, ctx.author, item)

       with open('users.json', 'w') as f:
            json.dump(users, f)
        
       with open('role.json', 'w') as f:
            json.dump(users2, f)

    @commands.command()
    async def coinage(self, ctx, member : discord.Member):
        with open('users.json', 'r') as f:
            users = json.load(f)

            await self.saycoin(ctx, users, member)

        with open('users.json', 'w') as f:
            json.dump(users, f)

    @commands.command()
    async def level(self, ctx, member : discord.Member):
        with open('users.json', 'r') as f:
            users = json.load(f)

        await self.saylevel(ctx, users, member)

        with open('users.json', 'w') as f:
            json.dump(users, f)

    @commands.Cog.listener()
    async def on_member_join(self, member):
        with open('users.json', 'r') as f:
            users = json.load(f)

        with open('role.json', 'r') as f:
            users2 = json.load(f)

        await self.update_data(users, users2, member)

        with open('users.json', 'w') as f:
            json.dump(users, f)

        with open('role.json', 'w') as f:
            json.dump(users2, f)

    @commands.Cog.listener()
    async def on_message(self, message):
        if message.author.id != 683210711257841672:
            meslen = len(message.content)
            with open('users.json', 'r') as f:
                users = json.load(f)
            
            with open('role.json', 'r') as f:
                users2 = json.load(f)

            await self.update_data(users, users2, message.author)
            await self.add_exp(users, message.author, meslen)
            await self.lvl_up(users, message.author, message)

            with open('users.json', 'w') as f:
                json.dump(users, f)

            with open('role.json', 'w') as f:
                json.dump(users2, f)

    async def buyitem(self, ctx, users, users2, user, item):
        item = item.lower()
        guild = ctx.guild
        role = discord.utils.get(guild.roles, name=item)
        remrole = discord.utils.get(guild.roles, name=users2[f'{user.id}']['role'])
        if item == 'red':
            if users[f'{user.id}']['coins'] > 100:
                if users2[f'{user.id}']['role'] == 'none':
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-100
                    users2[f'{user.id}']['role'] == 'red'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')
                else:
                    await user.remove_roles(remrole)
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-100
                    users2[f'{user.id}']['role'] == 'red'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')
        
        if item == 'pink':
            if users[f'{user.id}']['coins'] > 160:
                if users2[f'{user.id}']['role'] == 'none':
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-160
                    users2[f'{user.id}']['role'] == 'pink'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')
                else:
                    await user.remove_roles(remrole)
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-160
                    users2[f'{user.id}']['role'] == 'pink'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')

        if item == 'yellow':
            if users[f'{user.id}']['coins'] > 75:
                if users2[f'{user.id}']['role'] == 'none':
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-75
                    users2[f'{user.id}']['role'] == 'yellow'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')
                else:
                    await user.remove_roles(remrole)
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-75
                    users2[f'{user.id}']['role'] == 'yellow'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')

        if item == 'orange':
            if users[f'{user.id}']['coins'] > 90:
                if users2[f'{user.id}']['role'] == 'none':
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-90
                    users2[f'{user.id}']['role'] == 'orange'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')
                else:
                    await user.remove_roles(remrole)
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-90
                    users2[f'{user.id}']['role'] == 'orange'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')
        
        if item == 'green':
            if users[f'{user.id}']['coins'] > 50:
                if users2[f'{user.id}']['role'] == 'none':
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-50
                    users2[f'{user.id}']['role'] == 'green'
                    await user.add_roles(role)
                else:
                    await user.remove_roles(remrole)
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-50
                    users2[f'{user.id}']['role'] == 'green'
                    await user.add_roles(role)

        if item == 'blue':
            if users[f'{user.id}']['coins'] > 150:
                if users2[f'{user.id}']['role'] == 'none':
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-150
                    users2[f'{user.id}']['role'] == 'blue'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')
                else:
                    await user.remove_roles(remrole)
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-150
                    users2[f'{user.id}']['role'] == 'blue'
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought {role}!')
        
        if item == 'voice changer':
            if users[f'{user.id}']['coins'] > 6000:
                    users[f'{user.id}']['coins'] = users[f'{user.id}']['coins']-6000
                    role = discord.utils.get(guild.roles, name="Voice Changer Allowed")
                    await user.add_roles(role)
                    await ctx.send(f'{user} bought Voice Changer role!')
                    

    async def update_data(self, users, users2, user):
        if not f'{user.id}' in users:
            users[f'{user.id}'] = {}
            users[f'{user.id}']['exps'] = 0
            users[f'{user.id}']['level'] = 1
            users[f'{user.id}']['coins'] = 0
            users[f'{user.id}']['wins'] = 0
            users[f'{user.id}']['loss'] = 0
            users[f'{user.id}']['winstreak'] = 0
        if not f'{user.id}' in users2:
            users2[f'{user.id}'] = {}
            users2[f'{user.id}']['role'] = "none"

    async def saylevel(self, ctx, users, user):
        lvl = users[f'{user.id}']['level']
        await ctx.send(f'Your current level is {lvl}')

    async def saycoin(self, ctx, users, user):
        lvl = users[f'{user.id}']['coins']
        await ctx.send(f'Your current coinage is {lvl}')

    async def add_exp(self, users, user, exp):
        users[f'{user.id}']['exps'] += exp
        lvl = users[f'{user.id}']['level']
        multiplier = lvl * 0.01
        final = multiplier + 1
        users[f'{user.id}']['coins'] += exp*final

    async def lvl_up(self, users, user, message):
        experience = users[f'{user.id}']['exps']
        lvl_start = users[f'{user.id}']['level']
        lvl_end = int(experience ** (1/4))
        if lvl_start < lvl_end:
            users[f'{user.id}']['level'] = lvl_end
            if message.guild.id != 696461066393354301:
                await message.channel.send(f'{user.mention} has leveled up to level {lvl_end}')

    async def fc(self, ctx, users, user, coins):
        fcoins = float(coins)
        lvl = users[f'{user.id}']['coins']
        if not [f'{user.id}']['wins'] in users:
            users[f'{user.id}']['wins'] = 0
        
        if not [f'{user.id}']['loss'] in users:
            users[f'{user.id}']['loss'] = 0
        
        if not [f'{user.id}']['winstreak'] in users:
            users[f'{user.id}']['winstreak'] = 0

        if lvl > fcoins:
            random.seed()
            chance  = random.randrange(100)
            if chance > 50:
                lvl = lvl+fcoins
                users[f'{user.id}']['winstreak'] = users[f'{user.id}']['winstreak']+1
                users[f'{user.id}']['wins'] = users[f'{user.id}']['wins']+1
                await ctx.send(f'{user.mention} won {fcoins}! Currently he has {lvl} coins.')
            else:
                lvl = lvl-fcoins
                users[f'{user.id}']['winstreak'] = 0
                users[f'{user.id}']['loss'] = users[f'{user.id}']['loss']+1
                await ctx.send(f'{user.mention} lost {fcoins}. But you can try again later, you will eventually win.')
            
        if chance == 51:
                await ctx.send(f'{user.mention} is lucky, he almost lost!')
            
        if chance == 50:
                await ctx.send(f'{user.mention} is unlucky, he almost won...')

    async def saywins(self, ctx, users, user):
        hmm = users[f'{user.id}']['wins']
        ctx.send(f'{user} has {hmm} wins.')
    
    async def saywinstreak(self, ctx, users, user):
        hmm = users[f'{user.id}']['winstreak']
        ctx.send(f'{user} has {hmm} wins in a row.')
    
    async def sayloss(self, ctx, users, user):
        hmm = users[f'{user.id}']['winstreak']
        ctx.send(f'{user} has {hmm} losses.')

def setup(client):
    client.add_cog(OldLevel(client))
